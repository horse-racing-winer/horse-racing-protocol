{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x31962d1e198f4AABdeFdeD40359004A8102c9036",
    "txHash": "0x11c55d4bc5ede283732afd3afb32efeb248a33ec193a6b5ed1a5f23987d420ee",
    "deployTransaction": {
      "hash": "0x11c55d4bc5ede283732afd3afb32efeb248a33ec193a6b5ed1a5f23987d420ee",
      "type": 0,
      "accessList": null,
      "blockHash": "0x0e4032287c9223f57a35d7523624cebb5f4581bf207765b51ece79d455f6404e",
      "blockNumber": 8918326,
      "transactionIndex": 8,
      "confirmations": 1,
      "from": "0x2797b82EA7256817A4739dbe2dB96db6c59d230d",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x05d21dba00"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 6,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x33a2ec5666c313d29cc3d3d730d74496def25a55a4f4586c7470dd945c0b5975",
      "s": "0x2e8e9b59edb163674341ac80cc3ad3211ec70bf7052179bc6f396b0f5e9fc4e3",
      "v": 86264,
      "creates": "0x31962d1e198f4AABdeFdeD40359004A8102c9036",
      "chainId": 43114
    }
  },
  "proxies": [
    {
      "address": "0x9AbBb32033a24c2f503704d8A0F20A7E4af9ABfe",
      "txHash": "0xaa1ad68d08519f628cf3ea42c4730488bb483e7c9f698da906acd4d93627daee",
      "kind": "transparent"
    },
    {
      "address": "0x5b88aaCdec4AEfF96fDC6A236cB87B64516EDbb1",
      "txHash": "0x5ea6e9c290acf69f8d6c62c9619a11ec245261cd6f1440f886a2ebf5f0bf3d91",
      "kind": "transparent"
    },
    {
      "address": "0x713967412d60fe5a38442562c98E194BAfCEae5e",
      "txHash": "0x1c05eb1e3329be31d107b10427b87ad5a6f8ca487302a3581a187004eebad5db",
      "kind": "transparent"
    },
    {
      "address": "0x7F8CB68c52c26b9E5e6d0eCd48351d5Fb2F7546F",
      "txHash": "0x60635029876344049e562923d3cffd3d79d9b7ad8a527a1d5804a1756e518334",
      "kind": "transparent"
    }
  ],
  "impls": {
    "69c69de8d434cf131d6d8bbe8876fae87ea09d1541eb241818e7c2c19e9c7e84": {
      "address": "0x06c14Eb7464157b723AE0C8Cc604D5c4baeb494a",
      "txHash": "0xdb9aa6061b63d56495243aee06024cfda73aab720598f8cfaef9a93a4239bfc7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "BlindBox",
            "label": "currentTokenId",
            "type": "t_uint256",
            "src": "contracts/BlindBox.sol:14"
          },
          {
            "contract": "BlindBox",
            "label": "userBuys",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/BlindBox.sol:15"
          },
          {
            "contract": "BlindBox",
            "label": "beneficiary",
            "type": "t_address_payable",
            "src": "contracts/BlindBox.sol:18"
          },
          {
            "contract": "BlindBox",
            "label": "solds",
            "type": "t_uint256",
            "src": "contracts/BlindBox.sol:19"
          },
          {
            "contract": "BlindBox",
            "label": "price",
            "type": "t_uint256",
            "src": "contracts/BlindBox.sol:20"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3c1c5a2649b22ccf75f560c4935fbcc4df8019a6c3276e80d79d674a3b85fd30": {
      "address": "0xAAD88E8982769468f880cF748a9084f619f0c6A5",
      "txHash": "0xba29bfafd56e88cb3df7f652271da37b16cdd3fd44da22edf95f89be4f22cc93",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "BlindBox",
            "label": "currentTokenId",
            "type": "t_uint256",
            "src": "contracts/BlindBox.sol:25"
          },
          {
            "contract": "BlindBox",
            "label": "userBuys",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/BlindBox.sol:26"
          },
          {
            "contract": "BlindBox",
            "label": "beneficiary",
            "type": "t_address_payable",
            "src": "contracts/BlindBox.sol:29"
          },
          {
            "contract": "BlindBox",
            "label": "solds",
            "type": "t_uint256",
            "src": "contracts/BlindBox.sol:30"
          },
          {
            "contract": "BlindBox",
            "label": "price",
            "type": "t_uint256",
            "src": "contracts/BlindBox.sol:31"
          },
          {
            "contract": "BlindBox",
            "label": "openStart",
            "type": "t_bool",
            "src": "contracts/BlindBox.sol:32"
          },
          {
            "contract": "BlindBox",
            "label": "horse",
            "type": "t_address",
            "src": "contracts/BlindBox.sol:33"
          },
          {
            "contract": "BlindBox",
            "label": "poolLength",
            "type": "t_uint256",
            "src": "contracts/BlindBox.sol:34"
          },
          {
            "contract": "BlindBox",
            "label": "pools",
            "type": "t_mapping(t_uint256,t_struct(Pool)4844_storage)",
            "src": "contracts/BlindBox.sol:35"
          },
          {
            "contract": "BlindBox",
            "label": "userBuysPer",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/BlindBox.sol:36"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Pool)4844_storage)": {
            "label": "mapping(uint256 => struct BlindBox.Pool)"
          },
          "t_struct(Pool)4844_storage": {
            "label": "struct BlindBox.Pool",
            "members": [
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "solds",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d8aab9aeabe02909691dbd217db7f26f7ad6aab005027c5d180bb45646ac2ccd": {
      "address": "0x6005658BE37dc478B6B009924a37B362d94402BA",
      "txHash": "0xc6543e5b8fa74408d9a06dcb65d566e332b713ade3340baa756986bda9485deb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9e76d3803ded52a6a02cd9621f7754c1a673c9a4cfbc8f4d4409163312bd23e2": {
      "address": "0x5697cBd728d19DAA942bCf2e00fbe6D82513CD60",
      "txHash": "0xff551a5dd39c42d7a80e10a66bec315dbd6f5ec7c04d3c98d24284442d67dfad",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "11faf34756e2d41c661fc38551c4b1a016a93f0d2f116c1f499c6604cf63f63f": {
      "address": "0x0f90f54f3f559c9d5Dbb01197645CD29cd510Bc8",
      "txHash": "0xf833b2ad8ff2b9377e451c0835c54cfb52daaef88f2af187bfc8a95451fd78a9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "BlindBox",
            "label": "currentTokenId",
            "type": "t_uint256",
            "src": "contracts/BlindBox.sol:25"
          },
          {
            "contract": "BlindBox",
            "label": "userBuys",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/BlindBox.sol:26"
          },
          {
            "contract": "BlindBox",
            "label": "beneficiary",
            "type": "t_address_payable",
            "src": "contracts/BlindBox.sol:29"
          },
          {
            "contract": "BlindBox",
            "label": "solds",
            "type": "t_uint256",
            "src": "contracts/BlindBox.sol:30"
          },
          {
            "contract": "BlindBox",
            "label": "price",
            "type": "t_uint256",
            "src": "contracts/BlindBox.sol:31"
          },
          {
            "contract": "BlindBox",
            "label": "openStart",
            "type": "t_bool",
            "src": "contracts/BlindBox.sol:32"
          },
          {
            "contract": "BlindBox",
            "label": "horse",
            "type": "t_address",
            "src": "contracts/BlindBox.sol:33"
          },
          {
            "contract": "BlindBox",
            "label": "poolLength",
            "type": "t_uint256",
            "src": "contracts/BlindBox.sol:34"
          },
          {
            "contract": "BlindBox",
            "label": "pools",
            "type": "t_mapping(t_uint256,t_struct(Pool)4844_storage)",
            "src": "contracts/BlindBox.sol:35"
          },
          {
            "contract": "BlindBox",
            "label": "userBuysPer",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/BlindBox.sol:36"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Pool)4844_storage)": {
            "label": "mapping(uint256 => struct BlindBox.Pool)"
          },
          "t_struct(Pool)4844_storage": {
            "label": "struct BlindBox.Pool",
            "members": [
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "solds",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1d895dbe6d9d6b58a7d2eb4e49dbd6fdd2eced9d20ab7ebb48628cd99afa18bd": {
      "address": "0x2c0eB820822d8D75d4c5FE013fDa4520993362dC",
      "txHash": "0x8dc985e88f2a51d6dd8ca41893c82aabf8c2b6d858fe743cad5006b66aba78f5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ccc45bae9d4abe3bbf219ebbce3abda104152bdf039885803d70a110669b6de4": {
      "address": "0x5248eE32b40f48155a3824Fb7Af57Fc76468Ab70",
      "txHash": "0x40c02f897fd48995d707c3892bb610f3142bf5d2a30b63bd81ad7708bc9b85f7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "86f8aa5e5145fcd771c273d96b6f227b3bd53cc4a6f46330621d3492b1e5816c": {
      "address": "0xF6d50d887924c66D5296d47891d7B113E6feea0B",
      "txHash": "0xfaaba7bc867fb256449613a79e6fd86b11ff7aade824fa23d647206204009e81",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "BlindBox",
            "label": "currentTokenId",
            "type": "t_uint256",
            "src": "contracts/BlindBox.sol:25"
          },
          {
            "contract": "BlindBox",
            "label": "userBuys",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/BlindBox.sol:26"
          },
          {
            "contract": "BlindBox",
            "label": "beneficiary",
            "type": "t_address_payable",
            "src": "contracts/BlindBox.sol:29"
          },
          {
            "contract": "BlindBox",
            "label": "solds",
            "type": "t_uint256",
            "src": "contracts/BlindBox.sol:30"
          },
          {
            "contract": "BlindBox",
            "label": "price",
            "type": "t_uint256",
            "src": "contracts/BlindBox.sol:31"
          },
          {
            "contract": "BlindBox",
            "label": "openStart",
            "type": "t_bool",
            "src": "contracts/BlindBox.sol:32"
          },
          {
            "contract": "BlindBox",
            "label": "horse",
            "type": "t_address",
            "src": "contracts/BlindBox.sol:33"
          },
          {
            "contract": "BlindBox",
            "label": "poolLength",
            "type": "t_uint256",
            "src": "contracts/BlindBox.sol:34"
          },
          {
            "contract": "BlindBox",
            "label": "pools",
            "type": "t_mapping(t_uint256,t_struct(Pool)4844_storage)",
            "src": "contracts/BlindBox.sol:35"
          },
          {
            "contract": "BlindBox",
            "label": "userBuysPer",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/BlindBox.sol:36"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Pool)4844_storage)": {
            "label": "mapping(uint256 => struct BlindBox.Pool)"
          },
          "t_struct(Pool)4844_storage": {
            "label": "struct BlindBox.Pool",
            "members": [
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "solds",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "14c1456a99a27936a591a5c843fbb30112292b9d22123e546c90dee41449644d": {
      "address": "0x1f4DaB1986F709a8086768d21D0DE573432B0985",
      "txHash": "0x076869a9782e6ba6b950abb4c971d250b12b1cb66fea9f24c4bf3dc2efd58de2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Horse",
            "label": "minters",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/Horse.sol:12"
          },
          {
            "contract": "Horse",
            "label": "tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/Horse.sol:13"
          },
          {
            "contract": "Horse",
            "label": "_types",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "contracts/Horse.sol:15"
          },
          {
            "contract": "Horse",
            "label": "currentTokenId",
            "type": "t_uint256",
            "src": "contracts/Horse.sol:16"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "57ed2b9fa9fad7c5e36706adb5ac42b99079f49965d048fb5c325a04a24d8dc2": {
      "address": "0x0f6579c6c00602e6C9029EEF52634974c20C9504",
      "txHash": "0x92d9cc95088018cb36639e653855875c231b5d99cc112d51d8d00176b33e857f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Game",
            "label": "signer",
            "type": "t_address",
            "src": "contracts/Game.sol:28"
          },
          {
            "contract": "Game",
            "label": "hrw",
            "type": "t_contract(IERC20Upgradeable)277",
            "src": "contracts/Game.sol:29"
          },
          {
            "contract": "Game",
            "label": "horse",
            "type": "t_contract(Horse)7822",
            "src": "contracts/Game.sol:30"
          },
          {
            "contract": "Game",
            "label": "userNative",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/Game.sol:32"
          },
          {
            "contract": "Game",
            "label": "userWithdrawNative",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/Game.sol:33"
          },
          {
            "contract": "Game",
            "label": "userHrw",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/Game.sol:35"
          },
          {
            "contract": "Game",
            "label": "userWithdrawHrw",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/Game.sol:36"
          },
          {
            "contract": "Game",
            "label": "userHorse",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/Game.sol:38"
          },
          {
            "contract": "Game",
            "label": "userHorseMapping",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/Game.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IERC20Upgradeable)277": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(Horse)7822": {
            "label": "contract Horse"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "45c0a360604e351bbfa509d732a0a92d84d0c9927270655da6ec816c2cd573f3": {
      "address": "0x2f8893A4d9E50830241CC443433D54C00B3eB0eb",
      "txHash": "0x616197298b2be42857ef82467720d738c843d6c962c561db35431b81ceecf6ad",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "BlindBox",
            "label": "currentTokenId",
            "type": "t_uint256",
            "src": "contracts/BlindBox.sol:25"
          },
          {
            "contract": "BlindBox",
            "label": "userBuys",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/BlindBox.sol:26"
          },
          {
            "contract": "BlindBox",
            "label": "beneficiary",
            "type": "t_address_payable",
            "src": "contracts/BlindBox.sol:29"
          },
          {
            "contract": "BlindBox",
            "label": "solds",
            "type": "t_uint256",
            "src": "contracts/BlindBox.sol:30"
          },
          {
            "contract": "BlindBox",
            "label": "price",
            "type": "t_uint256",
            "src": "contracts/BlindBox.sol:31"
          },
          {
            "contract": "BlindBox",
            "label": "openStart",
            "type": "t_bool",
            "src": "contracts/BlindBox.sol:32"
          },
          {
            "contract": "BlindBox",
            "label": "horse",
            "type": "t_address",
            "src": "contracts/BlindBox.sol:33"
          },
          {
            "contract": "BlindBox",
            "label": "poolLength",
            "type": "t_uint256",
            "src": "contracts/BlindBox.sol:34"
          },
          {
            "contract": "BlindBox",
            "label": "pools",
            "type": "t_mapping(t_uint256,t_struct(Pool)4844_storage)",
            "src": "contracts/BlindBox.sol:35"
          },
          {
            "contract": "BlindBox",
            "label": "userBuysPer",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/BlindBox.sol:36"
          },
          {
            "contract": "BlindBox",
            "label": "types",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "contracts/BlindBox.sol:37"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Pool)4844_storage)": {
            "label": "mapping(uint256 => struct BlindBox.Pool)"
          },
          "t_struct(Pool)4844_storage": {
            "label": "struct BlindBox.Pool",
            "members": [
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "solds",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a89c4fd5c11093756a138c28db00e935cd0ff8444d06f7db506a6eb0c9a2c04e": {
      "address": "0x2383fcBe4eAb193C6c86613A2Fb862D3f27B51f3",
      "txHash": "0xd34874329f09104951ae9c569f89ee0b37b7768d3823374f037a7b2d2b19a5c2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "BlindBox",
            "label": "currentTokenId",
            "type": "t_uint256",
            "src": "contracts/BlindBox.sol:25"
          },
          {
            "contract": "BlindBox",
            "label": "userBuys",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/BlindBox.sol:26"
          },
          {
            "contract": "BlindBox",
            "label": "beneficiary",
            "type": "t_address_payable",
            "src": "contracts/BlindBox.sol:29"
          },
          {
            "contract": "BlindBox",
            "label": "solds",
            "type": "t_uint256",
            "src": "contracts/BlindBox.sol:30"
          },
          {
            "contract": "BlindBox",
            "label": "price",
            "type": "t_uint256",
            "src": "contracts/BlindBox.sol:31"
          },
          {
            "contract": "BlindBox",
            "label": "openStart",
            "type": "t_bool",
            "src": "contracts/BlindBox.sol:32"
          },
          {
            "contract": "BlindBox",
            "label": "horse",
            "type": "t_address",
            "src": "contracts/BlindBox.sol:33"
          },
          {
            "contract": "BlindBox",
            "label": "poolLength",
            "type": "t_uint256",
            "src": "contracts/BlindBox.sol:34"
          },
          {
            "contract": "BlindBox",
            "label": "pools",
            "type": "t_mapping(t_uint256,t_struct(Pool)4844_storage)",
            "src": "contracts/BlindBox.sol:35"
          },
          {
            "contract": "BlindBox",
            "label": "userBuysPer",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/BlindBox.sol:36"
          },
          {
            "contract": "BlindBox",
            "label": "types",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "contracts/BlindBox.sol:37"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Pool)4844_storage)": {
            "label": "mapping(uint256 => struct BlindBox.Pool)"
          },
          "t_struct(Pool)4844_storage": {
            "label": "struct BlindBox.Pool",
            "members": [
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "solds",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ae033f9601638787fe24e58eac25e0ed788248d4f564d82225b93544e7ac6902": {
      "address": "0xe81B366632ff82425b6B7D85dbFE3189bE4A4302",
      "txHash": "0x8eb9855b0780176896df5449451f7cd560205ca18ca9eec61361bc769485714f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "BlindBox",
            "label": "currentTokenId",
            "type": "t_uint256",
            "src": "contracts/BlindBox.sol:25"
          },
          {
            "contract": "BlindBox",
            "label": "userBuys",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/BlindBox.sol:26"
          },
          {
            "contract": "BlindBox",
            "label": "beneficiary",
            "type": "t_address_payable",
            "src": "contracts/BlindBox.sol:29"
          },
          {
            "contract": "BlindBox",
            "label": "solds",
            "type": "t_uint256",
            "src": "contracts/BlindBox.sol:30"
          },
          {
            "contract": "BlindBox",
            "label": "price",
            "type": "t_uint256",
            "src": "contracts/BlindBox.sol:31"
          },
          {
            "contract": "BlindBox",
            "label": "openStart",
            "type": "t_bool",
            "src": "contracts/BlindBox.sol:32"
          },
          {
            "contract": "BlindBox",
            "label": "horse",
            "type": "t_address",
            "src": "contracts/BlindBox.sol:33"
          },
          {
            "contract": "BlindBox",
            "label": "poolLength",
            "type": "t_uint256",
            "src": "contracts/BlindBox.sol:34"
          },
          {
            "contract": "BlindBox",
            "label": "pools",
            "type": "t_mapping(t_uint256,t_struct(Pool)4844_storage)",
            "src": "contracts/BlindBox.sol:35"
          },
          {
            "contract": "BlindBox",
            "label": "userBuysPer",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/BlindBox.sol:36"
          },
          {
            "contract": "BlindBox",
            "label": "types",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "contracts/BlindBox.sol:37"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Pool)4844_storage)": {
            "label": "mapping(uint256 => struct BlindBox.Pool)"
          },
          "t_struct(Pool)4844_storage": {
            "label": "struct BlindBox.Pool",
            "members": [
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "solds",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8b93fc72c9020c48fb3ec8b13c14ae4a6fd4a033b7d0f1cd050150377576252f": {
      "address": "0xEB8b0a1f771Ea7BbDb66F18b0DC1540b8AF59a62",
      "txHash": "0xdb7f8dde4ef01b37d6564dca9a2b1a771e5142c99e896632f82042f046f65f9d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "BlindBox",
            "label": "currentTokenId",
            "type": "t_uint256",
            "src": "contracts/BlindBox.sol:25"
          },
          {
            "contract": "BlindBox",
            "label": "userBuys",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/BlindBox.sol:26"
          },
          {
            "contract": "BlindBox",
            "label": "beneficiary",
            "type": "t_address_payable",
            "src": "contracts/BlindBox.sol:29"
          },
          {
            "contract": "BlindBox",
            "label": "solds",
            "type": "t_uint256",
            "src": "contracts/BlindBox.sol:30"
          },
          {
            "contract": "BlindBox",
            "label": "price",
            "type": "t_uint256",
            "src": "contracts/BlindBox.sol:31"
          },
          {
            "contract": "BlindBox",
            "label": "openStart",
            "type": "t_bool",
            "src": "contracts/BlindBox.sol:32"
          },
          {
            "contract": "BlindBox",
            "label": "horse",
            "type": "t_address",
            "src": "contracts/BlindBox.sol:33"
          },
          {
            "contract": "BlindBox",
            "label": "poolLength",
            "type": "t_uint256",
            "src": "contracts/BlindBox.sol:34"
          },
          {
            "contract": "BlindBox",
            "label": "pools",
            "type": "t_mapping(t_uint256,t_struct(Pool)4844_storage)",
            "src": "contracts/BlindBox.sol:35"
          },
          {
            "contract": "BlindBox",
            "label": "userBuysPer",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/BlindBox.sol:36"
          },
          {
            "contract": "BlindBox",
            "label": "types",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "contracts/BlindBox.sol:37"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Pool)4844_storage)": {
            "label": "mapping(uint256 => struct BlindBox.Pool)"
          },
          "t_struct(Pool)4844_storage": {
            "label": "struct BlindBox.Pool",
            "members": [
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "solds",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2716a119184d6874621175cbd98f7537d2f0e26555fcc30c766bcd06c4a9afed": {
      "address": "0x12728227887e13c04C174b14b5F326E5fdd9fAD1",
      "txHash": "0xe81705dfbbce88eefd5aadb7720d9c8d764b587c3e50d92d2112e18e8ea26607",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Game",
            "label": "signer",
            "type": "t_address",
            "src": "contracts/Game.sol:28"
          },
          {
            "contract": "Game",
            "label": "hrw",
            "type": "t_contract(IERC20Upgradeable)277",
            "src": "contracts/Game.sol:29"
          },
          {
            "contract": "Game",
            "label": "horse",
            "type": "t_contract(Horse)7881",
            "src": "contracts/Game.sol:30"
          },
          {
            "contract": "Game",
            "label": "userNative",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/Game.sol:32"
          },
          {
            "contract": "Game",
            "label": "userWithdrawNative",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/Game.sol:33"
          },
          {
            "contract": "Game",
            "label": "userHrw",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/Game.sol:35"
          },
          {
            "contract": "Game",
            "label": "userWithdrawHrw",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/Game.sol:36"
          },
          {
            "contract": "Game",
            "label": "userHorse",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/Game.sol:38"
          },
          {
            "contract": "Game",
            "label": "userHorseMapping",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/Game.sol:39"
          },
          {
            "contract": "Game",
            "label": "beneficiary",
            "type": "t_address_payable",
            "src": "contracts/Game.sol:41"
          },
          {
            "contract": "Game",
            "label": "withdrawFees",
            "type": "t_uint256",
            "src": "contracts/Game.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IERC20Upgradeable)277": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(Horse)7881": {
            "label": "contract Horse"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "22e1f50ba7174723a8baeca41b7070586cd4faed76e09d6e8830669e0e48f7a0": {
      "address": "0x56ACE6175BDb9937C5dAdf991bE16E963076e076",
      "txHash": "0x44a6fa112bf04869fae9b5749325b8ddf54448a71d0132251259a5dd999cd175",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "BlindBox",
            "label": "currentTokenId",
            "type": "t_uint256",
            "src": "contracts/BlindBox.sol:25"
          },
          {
            "contract": "BlindBox",
            "label": "userBuys",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/BlindBox.sol:26"
          },
          {
            "contract": "BlindBox",
            "label": "beneficiary",
            "type": "t_address_payable",
            "src": "contracts/BlindBox.sol:29"
          },
          {
            "contract": "BlindBox",
            "label": "solds",
            "type": "t_uint256",
            "src": "contracts/BlindBox.sol:30"
          },
          {
            "contract": "BlindBox",
            "label": "price",
            "type": "t_uint256",
            "src": "contracts/BlindBox.sol:31"
          },
          {
            "contract": "BlindBox",
            "label": "openStart",
            "type": "t_bool",
            "src": "contracts/BlindBox.sol:32"
          },
          {
            "contract": "BlindBox",
            "label": "horse",
            "type": "t_address",
            "src": "contracts/BlindBox.sol:33"
          },
          {
            "contract": "BlindBox",
            "label": "poolLength",
            "type": "t_uint256",
            "src": "contracts/BlindBox.sol:34"
          },
          {
            "contract": "BlindBox",
            "label": "pools",
            "type": "t_mapping(t_uint256,t_struct(Pool)4844_storage)",
            "src": "contracts/BlindBox.sol:35"
          },
          {
            "contract": "BlindBox",
            "label": "userBuysPer",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/BlindBox.sol:36"
          },
          {
            "contract": "BlindBox",
            "label": "types",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "contracts/BlindBox.sol:37"
          },
          {
            "contract": "BlindBox",
            "label": "openFees",
            "type": "t_uint256",
            "src": "contracts/BlindBox.sol:38"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Pool)4844_storage)": {
            "label": "mapping(uint256 => struct BlindBox.Pool)"
          },
          "t_struct(Pool)4844_storage": {
            "label": "struct BlindBox.Pool",
            "members": [
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "solds",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
